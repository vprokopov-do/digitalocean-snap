import requests
import time
import os

def main(args):
    # Ingesting token.
    token = os.getenv('token', None)
    if not token:
        return {"body": "No token provided. Terminating."}

    # Ingesting Droplet ID.
    droplet = os.getenv("droplet", None)
    if not droplet:
        return {"body": "No Droplet ID provided. Terminating."}
    
    # Building a base URL.
    url_base = "https://api.digitalocean.com/v2/droplets/" + droplet
    headers = {"Authorization": "Bearer " + token}
    
    # Triggering snapshot creation.
    url_trigger_snapshot_creation = url_base + "/actions"
    data = {"type":"snapshot", "name":"autogenerated_" + time.strftime("%Y_%m_%d_%H_%M")}
    trigger_snapshot_creation = requests.post(url_trigger_snapshot_creation, headers=headers, json=data)
    if not trigger_snapshot_creation.status_code == 201:
        return {"body": "There was an error while triggering snapshot creation. Terminating."}
    message = "New snapshot successfully triggered for creation: " + data["name"]

    # Triggering snapshot deletion.
    url_list_snapshots = url_base + "/snapshots"
    list_snapshots = requests.get(url_list_snapshots, headers=headers).json()
    for value in list_snapshots['snapshots']:
        if "autogenerated" in value['name']:
            url_trigger_snapshot_deletion = "https://api.digitalocean.com/v2/snapshots/" + str(value['id'])
            trigger_snapshot_deletion = requests.delete(url_trigger_snapshot_deletion, headers=headers)
            if not trigger_snapshot_deletion.status_code == 204:
                return {"body": "There was an error while triggering snapshot deletion. Terminating."}
            message = message + ". Existing snapshot successfully triggered for deletion: " + value['name']
    
    return {"body": message}